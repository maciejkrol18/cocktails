/**
 * Generated by Claude
 * from https://cocktails.solvro.pl/cocktails-openapi-docs.json
 */

// Enums
export enum CocktailCategory {
  Cocktail = 'Cocktail',
  OrdinaryDrink = 'Ordinary Drink',
  PunchPartyDrink = 'Punch / Party Drink',
  Shake = 'Shake',
  OtherUnknown = 'Other / Unknown',
  Cocoa = 'Cocoa',
  Shot = 'Shot',
  CoffeeTea = 'Coffee / Tea',
  HomemadeLiqueur = 'Homemade Liqueur',
  SoftDrink = 'Soft Drink',
}

export enum CocktailGlass {
  HighballGlass = 'Highball glass',
  OldFashionedGlass = 'Old-fashioned glass',
  CocktailGlass = 'Cocktail glass',
  CopperMug = 'Copper Mug',
  WhiskeyGlass = 'Whiskey Glass',
  CollinsGlass = 'Collins glass',
  PousseCafeGlass = 'Pousse cafe glass',
  ChampagneFlute = 'Champagne flute',
  WhiskeySourGlass = 'Whiskey sour glass',
  BrandySnifter = 'Brandy snifter',
  WhiteWineGlass = 'White wine glass',
  NickAndNoraGlass = 'Nick and Nora Glass',
  HurricaneGlass = 'Hurricane glass',
  CoffeeMug = 'Coffee mug',
  ShotGlass = 'Shot glass',
  Jar = 'Jar',
  IrishCoffeeCup = 'Irish coffee cup',
  PunchBowl = 'Punch bowl',
  Pitcher = 'Pitcher',
  PintGlass = 'Pint glass',
  CordialGlass = 'Cordial glass',
  BeerMug = 'Beer mug',
  MargaritaCoupetteGlass = 'Margarita/Coupette glass',
  BeerPilsner = 'Beer pilsner',
  BeerGlass = 'Beer Glass',
  ParfaitGlass = 'Parfait glass',
  WineGlass = 'Wine Glass',
  MasonJar = 'Mason jar',
  MargaritaGlass = 'Margarita glass',
  MartiniGlass = 'Martini Glass',
  BalloonGlass = 'Balloon Glass',
  CoupeGlass = 'Coupe Glass',
}

export enum IngredientType {
  Vodka = 'Vodka',
  Gin = 'Gin',
  Rum = 'Rum',
  Spirit = 'Spirit',
  Whisky = 'Whisky',
  Syrup = 'Syrup',
  Beer = 'Beer',
  Null = 'null',
  Liqueur = 'Liqueur',
  Bitter = 'Bitter',
  Brandy = 'Brandy',
  Cider = 'Cider',
  Liquor = 'Liquor',
  Beverage = 'Beverage',
  Garnish = 'Garnish',
  Sambuca = 'Sambuca',
  Whiskey = 'Whiskey',
  Liquer = 'Liquer',
  Candy = 'Candy',
  Fruit = 'Fruit',
  SoftDrink = 'Soft Drink',
  Water = 'Water',
  Mineral = 'Mineral',
  Wine = 'Wine',
  Soda = 'Soda',
  Cream = 'Cream',
  Milk = 'Milk',
  Juice = 'Juice',
  Coffee = 'Coffee',
  Sherry = 'Sherry',
  Spice = 'Spice',
  Mix = 'Mix',
  FortifiedWine = 'Fortified Wine',
  Sauce = 'Sauce',
  Tequila = 'Tequila',
  Schnapps = 'Schnapps',
  Sugar = 'Sugar',
  Stout = 'Stout',
  Alcopop = 'Alcopop',
  Cordial = 'Cordial',
  Flower = 'Flower',
  Bitters = 'Bitters',
  Aperitif = 'Aperitif',
  Cola = 'Cola',
  RiceWine = 'Rice wine',
  Sweet = 'Sweet',
  Tea = 'Tea',
  Port = 'Port',
  Vinegar = 'Vinegar',
  Confectionery = 'Confectionery',
  Vermouth = 'Vermouth',
  Mixer = 'Mixer',
  FruitJuice = 'Fruit Juice',
  Herb = 'Herb',
  Seasoning = 'Seasoning',
}

// Interfaces
export interface Ingredient {
  id: number
  name: string
  description: string | null
  alcohol: boolean | null
  type: string | null
  percentage: number | null
  imageUrl: string | null
  createdAt: string
  updatedAt: string
}

export interface Cocktail {
  id: number
  name: string
  instructions: string | null
  alcoholic: boolean
  category: string | null
  glass: string | null
  imageUrl: string | null
  createdAt: string
  updatedAt: string
}

export interface CocktailWithIngredients extends Cocktail {
  ingredients: (Ingredient & { measure: string })[]
}

export interface Pagination {
  total: number
  perPage: number
  currentPage: number
  lastPage: number
  firstPage: number
  firstPageUrl: string
  lastPageUrl: string
  nextPageUrl: string | null
  previousPageUrl: string | null
}

export interface PaginatedResponse<T> {
  meta: Pagination
  data: T[]
}

// Filters
export interface IngredientFilter {
  id?: number | number[] | { from?: number; to?: number }
  name?: string
  description?: string
  alcohol?: boolean
  type?: string
  percentage?: number | number[] | { from?: number; to?: number }
  createdAt?: string | string[] | { from?: string; to?: string }
  updatedAt?: string | string[] | { from?: string; to?: string }
}

export interface CocktailFilter {
  id?: number | number[] | { from?: number; to?: number }
  name?: string
  instructions?: string
  alcoholic?: boolean
  category?: string
  glass?: string
  createdAt?: string | string[] | { from?: string; to?: string }
  updatedAt?: string | string[] | { from?: string; to?: string }
  ingredientId?: number | number[] | { from?: number; to?: number }
}

export interface SortOption {
  field: string
  direction: 'asc' | 'desc'
}

export interface PaginationOptions {
  page?: number
  perPage?: number
}

export interface IngredientQueryOptions extends PaginationOptions {
  filter?: IngredientFilter
  sort?: SortOption[]
}

export type CocktailQueryOptions = CocktailFilter & PaginationOptions

// API response types
export type IngredientsResponse = PaginatedResponse<Ingredient>
export type CocktailsResponse = PaginatedResponse<Cocktail>
export type CocktailDetailResponse = { data: CocktailWithIngredients }
export type IngredientTypesResponse = { data: IngredientType[] }
export type CocktailGlassesResponse = { data: CocktailGlass[] }
export type CocktailCategoriesResponse = { data: CocktailCategory[] }
